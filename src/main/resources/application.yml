spring:
  profiles:
    active: development
  
  # 데이터베이스 설정 (H2 파일 모드)
  datasource:
    url: jdbc:h2:file:./data/elderberry;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    hikari:
      # 성능 최적화를 위한 커넥션 풀 설정
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      
  # JPA/Hibernate 설정 
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false  # 운영환경에서 false로 설정
        show_sql: false    # 운영환경에서 false로 설정
        # 성능 최적화 설정
        jdbc:
          batch_size: 50
          order_inserts: true
          order_updates: true
        # 캐시 설정 비활성화 (JCache 의존성 미포함)
        cache:
          use_second_level_cache: false
          use_query_cache: false
          region:
            factory_class: org.hibernate.cache.internal.NoCachingRegionFactory
        # N+1 문제 해결을 위한 배치 페칭
        default_batch_fetch_size: 100
    defer-datasource-initialization: true
    
  # SQL 초기화 설정
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
      continue-on-error: true
      
  # H2 콘솔 설정 (개발환경에서만)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
        
  # Redis 설정 (Docker 환경에서 활성화)
  data:
    redis:
      host: ${SPRING_REDIS_HOST:redis}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:elderberry123!}
      repositories:
        enabled: true
      timeout: 2000
      jedis:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

  # 캐시 설정 (Redis 사용)
  cache:
    type: redis
    redis:
      time-to-live: 600000  # 10분

  # 세션 설정 (Redis 세션 저장)
  session:
    store-type: redis
    redis:
      namespace: elderberry:session

  # 정적 리소스 캐싱 설정 (성능 최적화)
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 31536000  # 1년
          cache-public: true
      static-locations: classpath:/static/

# JWT 설정
jwt:
  secret: your-256-bit-secret-key-here-make-sure-it-is-long-enough-for-HS256-algorithm-security
  expiration: 86400000  # 24시간 (밀리초)
  refresh-expiration: 604800000  # 7일 (밀리초)

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
  # 압축 설정 (성능 최적화)
  compression:
    enabled: true
    min-response-size: 1024
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  # HTTP/2 지원
  http2:
    enabled: true

# 로깅 설정 (성능 최적화)
logging:
  level:
    com.globalcarelink: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.web: WARN
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - %msg%n"
  file:
    name: logs/elderberry.log
    max-size: 50MB
    max-history: 30
    
# 액추에이터 설정 (최소한으로 제한)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true

# 외부 API 설정
external:
  api:
    # 카카오맵 API
    kakao:
      javascript-key: ${KAKAO_JAVASCRIPT_KEY:b97b58672807a40c122a5deed8a98ea4}
      rest-api-key: ${KAKAO_REST_API_KEY:172a1fe2580f6038c6a3951ee63fd963}
    
    # 공공데이터 API
    public-data:
      service-key: ${PUBLIC_DATA_API_KEY:CCXHQiSSQ0J+RRaadSjmmS7ltxG/tlSVOYMjh45MmGne68ptgGAaAJVJti8nBazSjLemTAyb5gAuj43xq7fTog==}
      service-key-encoded: ${PUBLIC_DATA_API_KEY_ENCODED:CCXHQiSSQ0J%2BRRaadSjmmS7ltxG%2FtlSVOYMjh45MmGne68ptgGAaAJVJti8nBazSjLemTAyb5gAuj43xq7fTog%3D%3D}
      endpoints:
        # 국민건강보험공단 장기요양기관 평가
        ltc-evaluation: https://api.odcloud.kr/api
        # 외교부 국가·지역별 입국허가요건
        entrance-visa: https://apis.data.go.kr/1262000/EntranceVisaService2
        # 국립중앙의료원 전국 약국 정보
        pharmacy: https://apis.data.go.kr/B552657/ErmctInsttInfoInqireService
        # 건강보험심사평가원 병원정보
        hospital: https://apis.data.go.kr/B551182/hospInfoServicev2
        # 건강보험심사평가원 요양기관개폐업정보
        facility-closure: https://apis.data.go.kr/B551182/yadmOpCloInfoService2
        # 국민건강보험공단 장기요양기관 검색
        ltc-search: https://apis.data.go.kr/B550928/searchLtcInsttService01
        # 국민건강보험공단 장기요양기관 상세조회
        ltc-detail: https://apis.data.go.kr/B550928/getLtcInsttDetailInfoService02

# 프로파일별 설정
---
# 개발 환경
spring:
  config:
    activate:
      on-profile: development
      
  # 개발환경에서만 SQL 로깅 활성화
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        
logging:
  level:
    com.globalcarelink: DEBUG
    org.springframework.security: INFO
    
---
# 운영 환경
spring:
  config:
    activate:
      on-profile: production
      
  # 운영환경 데이터베이스 최적화
  datasource:
    hikari:
      minimum-idle: 10
      maximum-pool-size: 50
      
  # 운영환경에서 SQL 로깅 비활성화
  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: false
        
# 운영환경 로깅 최적화
logging:
  level:
    com.globalcarelink: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
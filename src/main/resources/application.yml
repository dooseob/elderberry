# Elderberry - 글로벌 케어링크 애플리케이션 설정
# 개발 환경 설정

server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: elderberry-global-care-link
  
  # 프로필 설정
  profiles:
    active: dev
  
  # 데이터베이스 설정
  datasource:
    url: jdbc:h2:file:./data/elderberry
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  # H2 콘솔 설정 (개발용)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true
        # 배치 처리 최적화
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        # 2차 캐시 설정
        cache:
          use_second_level_cache: false
          use_query_cache: false
  
  # 캐시 설정
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=30m,recordStats
  
  # JSON 설정
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss

# JWT 토큰 설정
jwt:
  secret: elderberry-jwt-secret-key-for-global-care-link-application-2024
  access-token-validity-in-seconds: 1800  # 30분
  refresh-token-validity-in-seconds: 604800  # 7일

# 보안 설정
security:
  password:
    bcrypt:
      strength: 12  # BCrypt 강도 (기본값보다 높음)
    default:
      encoder: bcrypt

# 캐시 상세 설정
cache:
  health-assessment:
    max-size: 1000
    ttl-minutes: 30
  coordinator-matching:
    max-size: 500
    ttl-minutes: 60
  member:
    max-size: 2000
    ttl-minutes: 15
  statistics:
    max-size: 100
    ttl-minutes: 120

# 비동기 처리 설정
async:
  core-pool-size: 5
  max-pool-size: 20
  queue-capacity: 100
  keep-alive-seconds: 60
  thread-name-prefix: elderberry-async-

# 로깅 설정
logging:
  level:
    com.globalcarelink: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/elderberry.log
    max-size: 10MB
    max-history: 10

# 관리 및 모니터링 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,caches,threaddump,heapdump
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
    tags:
      application: elderberry

# Swagger/OpenAPI 설정
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
    operations-sorter: method
    disable-swagger-default-url: true
  packages-to-scan: com.globalcarelink
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# 애플리케이션 특화 설정
app:
  # 건강 평가 설정
  health-assessment:
    cache-enabled: true
    async-stats-generation: true
    max-assessments-per-user: 10
  
  # 코디네이터 매칭 설정
  coordinator-matching:
    cache-enabled: true
    max-matches-returned: 10
    match-score-threshold: 0.6
    async-processing: true
  
  # 프로필 설정
  profile:
    validation-enabled: true
    auto-save-enabled: true
    max-profile-updates-per-day: 5
  
  # 보안 설정
  security:
    cors:
      allowed-origins: "http://localhost:3000,http://localhost:5173"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
    
    rate-limiting:
      enabled: true
      requests-per-minute: 60
      burst-capacity: 10
  
  # 알림 설정
  notification:
    enabled: true
    async-processing: true
    retry-attempts: 3
    retry-delay-seconds: 5

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod

  # 운영 데이터베이스 설정 (예시)
  datasource:
    url: jdbc:postgresql://localhost:5432/elderberry_prod
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:elderberry}
    password: ${DB_PASSWORD:password}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA 운영 설정
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 50

# JWT 운영 설정
jwt:
  secret: ${JWT_SECRET:your-production-secret-key}
  access-token-validity-in-seconds: 900   # 15분 (더 짧게)
  refresh-token-validity-in-seconds: 86400  # 1일 (더 짧게)

# 로깅 운영 설정
logging:
  level:
    com.globalcarelink: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/elderberry/application.log

# 관리 엔드포인트 운영 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

---
# 테스트 환경 설정
spring:
  config:
    activate:
      on-profile: test

  # 테스트 데이터베이스 설정 (메모리 모드 - 빠른 테스트용)
  datasource:
    url: jdbc:h2:mem:test_elderberry
    driver-class-name: org.h2.Driver
    username: sa
    password: 

  # JPA 테스트 설정
  jpa:
    hibernate:
      ddl-auto: create-drop  # 테스트는 매번 초기화
    show-sql: false

# 테스트 로깅 설정
logging:
  level:
    com.globalcarelink: WARN
    org.springframework: WARN
    org.hibernate: WARN

# 테스트 캐시 설정 (더 작은 크기)
cache:
  health-assessment:
    max-size: 100
    ttl-minutes: 5
  coordinator-matching:
    max-size: 50
    ttl-minutes: 5
  member:
    max-size: 200
    ttl-minutes: 5
  statistics:
    max-size: 10
    ttl-minutes: 5

# 테스트 비동기 설정 (더 작은 풀)
async:
  core-pool-size: 2
  max-pool-size: 5
  queue-capacity: 10
{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(java:*)",
      "Bash(./gradlew build:*)",
      "Bash(gradle:*)",
      "Bash(chmod:*)",
      "Bash(wc:*)",
      "Bash(./gradlew:*)",
      "Bash(export:*)",
      "Bash(ls:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(npm install:*)",
      "Bash(/mnt/c/Program Files/Java/jdk-21/bin/java -version)",
      "Bash(cmd.exe:*)",
      "Bash(repomix:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(powershell.exe:*)",
      "Bash(node:*)",
      "Bash(cp:*)",
      "Bash(npm run:*)",
      "Bash(.check-system.ps1)",
      "Bash(pwsh:*)",
      "Bash(touch:*)",
      "WebFetch(domain:cuong.io)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude --version)",
      "Bash(claude upgrade)",
      "Bash(npm outdated)",
      "Bash(npm update)",
      "Bash(npm update:*)",
      "Bash(npm test)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(echo $JAVA_HOME)",
      "Bash(\"$JAVA_HOME/bin/java\" -version)",
      "Bash(\"/mnt/c/Program Files/Java/jdk-17/bin/java.exe\" -version)",
      "Bash(echo:*)",
      "Bash(docker:*)",
      "Bash(\"$JAVA_HOME/bin/java.exe\" -version)",
      "WebFetch(domain:docs.spring.io)",
      "WebFetch(domain:spring.io)",
      "Bash(diff:*)",
      "Bash(cat:*)",
      "WebFetch(domain:github.com)",
      "Bash(git clone:*)",
      "Bash(sed:*)",
      "Bash(npm ls:*)",
      "Bash(\"/mnt/c/Program Files/Java/jdk-21/bin/java\" -version)",
      "Bash(apt list:*)",
      "Bash(/mnt/c/WINDOWS/system32/java -version)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(tar:*)",
      "Bash($HOME/java/bin/java:*)",
      "Bash(source ~/.bashrc)",
      "Bash(bash:*)",
      "Bash(unset JAVA_HOME)",
      "Bash(unset PATH)",
      "Bash(unzip:*)",
      "Bash(/home/human-08/java/bin/javac -version)",
      "Bash(curl:*)",
      "Bash(dpkg:*)",
      "Bash(journalctl:*)",
      "Bash(pkill:*)",
      "Bash(ssh:*)",
      "Bash(git remote set-url:*)",
      "Bash(dos2unix:*)",
      "Bash(unset:*)",
      "Bash(unset org.gradle.java.home)",
      "Bash(ss:*)",
      "Bash(readlink:*)",
      "Bash(git ls-tree:*)",
      "Bash(git checkout:*)",
      "Bash(for:*)",
      "Bash(do mv \"$file\" \"$file.disabled\")",
      "Bash(done)",
      "Bash(timeout:*)",
      "Bash(kill:*)",
      "Bash(git rm:*)",
      "Bash(npx vite:*)",
      "Bash(./dev-start.sh:*)",
      "Bash(./dev-status.sh:*)",
      "Bash(./dev-stop.sh:*)",
      "Bash(sudo fuser:*)",
      "Bash(true)",
      "Bash(make:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__filesystem__list_directory",
      "mcp__memory__search_nodes",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__read_file",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__memory__create_entities",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__write_file",
      "mcp__filesystem__search_files",
      "mcp__filesystem__read_multiple_files",
      "mcp__memory__add_observations",
      "mcp__memory__create_relations",
      "mcp__filesystem__create_directory",
      "Bash(wsl:*)",
      "Bash(DOCKER_BUILDKIT=0 docker build -t elderberry-backend:latest . --no-cache)",
      "Bash(sudo rm:*)",
      "Bash(npm info:*)",
      "Bash(./dev-restart.sh:*)",
      "Bash(awk:*)",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__move_file",
      "Bash(fuser:*)",
      "Bash(pgrep:*)",
      "Bash(ps:*)",
      "Bash(# Ï†ïÏÉÅ Î°úÍ∑∏Ïù∏ ÌÖåÏä§Ìä∏\necho \"\"üîç 8082 Ìè¨Ìä∏ ÏÉà ÏÑúÎ≤Ñ - Ï†ïÏÉÅ Î°úÍ∑∏Ïù∏ ÌÖåÏä§Ìä∏...\"\"\ncurl -X POST http://localhost:8082/api/auth/login \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -d ''{\"\"email\"\":\"\"test.domestic@example.com\"\",\"\"password\"\":\"\"Password123!\"\",\"\"rememberMe\"\":false}'' \\\n  -s | head -50\n\necho -e \"\"\\nüîç 8082 Ìè¨Ìä∏ ÏÉà ÏÑúÎ≤Ñ - ÏûòÎ™ªÎêú ÌÜ†ÌÅ∞Í≥º Ìï®Íªò Î°úÍ∑∏Ïù∏ ÌÖåÏä§Ìä∏...\"\"\ncurl -X POST http://localhost:8082/api/auth/login \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -H \"\"Authorization: Bearer invalid-token-format\"\" \\\n  -d ''{\"\"email\"\":\"\"test.domestic@example.com\"\",\"\"password\"\":\"\"Password123!\"\",\"\"rememberMe\"\":false}'' \\\n  -s | head -50)",
      "Bash(redis-cli:*)",
      "Bash(npm test:*)",
      "Bash(./test-login-fix.sh:*)",
      "Bash(./scripts/check-ports.sh:*)",
      "Bash(/mnt/c/Users/human-10/elderberry/scripts/check-ports.sh:*)",
      "Bash(npx tsc:*)",
      "Bash(npm start)",
      "Bash(/mnt/c/Users/human-10/elderberry/fix-imports.sh:*)",
      "Bash(../dev-status.sh)"
    ],
    "deny": []
  }
}
# ==========================================
# Docker Compose - 멀티 서비스 통합 개발환경
# Java Backend + Python Chatbot + React Frontend
# ==========================================

version: '3.8'

services:
  # Java 백엔드 (메인 API)
  java-backend:
    build:
      context: .
      dockerfile: Dockerfile.java
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - APP_CHATBOT_BASE_URL=http://python-chatbot:8000
    depends_on:
      - python-chatbot
    volumes:
      - ./data:/app/data
    networks:
      - elderberry-network

  # Python 챗봇 서비스
  python-chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=docker
    networks:
      - elderberry-network

  # React 프론트엔드 (개발시에만)
  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost/api
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - elderberry-network
    profiles:
      - development

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - java-backend
      - python-chatbot
    networks:
      - elderberry-network

networks:
  elderberry-network:
    driver: bridge